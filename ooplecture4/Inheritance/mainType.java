package ooplecture4.Inheritance;

import static ooplecture4.Inheritance.typeTest.p;

public class mainType {
    public static void main(String[] args){
        Person o1 = (Person)p[0];
        Person o2 = p[0];
        // Student o3 = p[0]; Здесь ты хочешь сказать, что объект, который находится в ячейке p[0] (там находится студент), это студент.
        // Но Java это не понимает автоматически, потому что по умолчанию считает, что все объекты в массиве p — это просто люди (Person).
        // Поэтому нужно явно сказать: "Я уверен, что в этой ячейке — студент", используя приведение типов (как в следующей строке).
        Student o4 = (Student)p[0];
        //Student o5 = p[9]; Здесь ты пытаешься сказать, что в ячейке p[9] находится студент.
        // Но там просто обычный человек (не студент), и Java не позволит так сделать, потому что это неправильно.
        Student o6 = (Student)p[9];
        // int x = p[0].getStudentNumber(); Ты пытаешься вызвать метод getStudentNumber(), который есть только у студентов, но Java думает, что ты работаешь с объектом класса Person (человек), и у простого человека такого метода нет.
        // Чтобы это исправить, нужно сначала убедиться,
        // что объект действительно является студентом, а потом привести его к классу Student.

    }
}
